# Set up an AWS Lambda function that we can use to update running ECS
# services from CodePipeline.  For more details, see
# ecs_deployer_lambda/README.md.

# Upload our ecs_deployer_lambda.zip file to AWS and configure it.
resource "aws_lambda_function" "ecs_deployer_lambda" {
  filename         = "ecs_deployer_lambda.zip"
  function_name    = "ecs_deployer_lambda"
  role             = "${aws_iam_role.ecs_deployer_lambda.arn}"
  handler          = "index.handler"
  source_code_hash = "${base64sha256(file("ecs_deployer_lambda.zip"))}"
  runtime          = "nodejs6.10"
}

# Define an IAM role which specifies what the lambda is allowed to do.
resource "aws_iam_role" "ecs_deployer_lambda" {
  name = "ecs_deployer_lambda"

  assume_role_policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "sts:AssumeRole",
      "Principal": {
        "Service": "lambda.amazonaws.com"
      },
      "Effect": "Allow",
      "Sid": ""
    }
  ]
}
EOF
}

# The security policy for our IAM role.
resource "aws_iam_role_policy" "ecs_deployer_lambda" {
  name = "ecs_deployer_lambda"
  role = "${aws_iam_role.ecs_deployer_lambda.id}"
  # This role was mostly auto-generated by the AWS web console, then fixed
  # up by hand a bit.
  policy = <<EOF
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": "logs:CreateLogGroup",
            "Resource": "arn:aws:logs:${var.aws_region}:${var.aws_account_id}:*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
            ],
            "Resource": [
                "arn:aws:logs:${var.aws_region}:${var.aws_account_id}:log-group:/aws/lambda/ecs_deployer_lambda:*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ecs:DescribeServices",
                "ecs:UpdateService",
                "ecs:DescribeTaskDefinition",
                "ecs:RegisterTaskDefinition"
            ],
            "Resource": [
                "*"
            ]
        }      
    ]
}
EOF
}
